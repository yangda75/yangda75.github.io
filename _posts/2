---
layout: post
title: "记一次debug"
tags: debug, wsl1, socket leak
---

## 我们至今仍未知道第一次出现bug的时间
```
8月7号，周六，中午12:57，
去现场实施的项目经理
在群里
说
“XXX系统又登不上去了，每天早上都会有一次”
```

当时他没有用`@`功能，当天也是周六，都在休息，没有人意识到这将是一次怎样的debug。
而小杨我，根本不记得看到过这条消息。

## 看看log
```
8月9号，周一，上午10:28，
去现场实施的项目工程师
在群里
说
10:28  > “@A @小杨 麻烦看一下log，8月7号晚上7点多左右xxx服务暂停了，以至于登录不上，查一下是什么原因。”
10:29  > 文件<xxx.log.rar>(微信电脑版)
```

这位同事使用了 `@` 功能，也发了log。而且是周一早上。虽然我刚到公司，还没完全睡醒，
还是很快地从一堆log里找到了“原因”。非常经典的一个报错：

    java.net.SocketException: No buffer space available (maximum connections
    reached?) 
google上可以搜到182,000,000条结果。最早的一条是2003年的(tomcat)[https://developer.jboss.org/thread/55838]
很开心，直接截图发到了群里。由于这一条报错是在程序刚启动，初始化数据库连接池的时候
报的，就顺便加了一句话，

    10:29 >“@A 是sqlserver连不上了吗？” 

现在再看，这是句废话，我真没睡醒。

一位没有被`@`的前端同事说是连接数不够了，没有释放。老大说是sqlserver（客户管理）
的连接数不够了。8月9号，问题第一次被处理，由于小杨多说的一句废话，新来的技术主管
A，老大（老王），还有比我们都更接近问题真相的前端同事，把这个宝贵的早上浪费在了
检查sqlserver连接数上，浪费了黄金时间。

## 干扰
1. 新系统bug多很正常，我们在这个项目中，用了三个新系统，(xxx1, xxx2, xxx3)，通过
http通讯。bug多点很正常
2. 三个系统中，一个可以跑在几乎所有主流平台上（flutter），
另一个也差不多（java），第三个只能跑在linux上
3. 客户和我们形成了鲜明的对比。他们只给了我们一个选择：windows server 2019,
build 17763(伏笔1)。由于我们三个月前没有通知要用linux，现在已经来不及申请了，先用
WSL(伏笔2)顶上（Vmware明显是更好的选择，但是客户给我们的虚拟机资源不够）
4. 频繁的需求变动，或者说，开发完成后，进场测试时才开始进行的“需求评审”

新系统的bug，以及大家都不太熟的WSL(不能用Linux真机，还有Vmware，谁用这种残废)，跨国公司の流程，废纸(还好我们没有把需求文档打印出来)一样的文档。

我迷失了。

我的能力是弱，但是“你跺你也麻”！

## `netstat`



